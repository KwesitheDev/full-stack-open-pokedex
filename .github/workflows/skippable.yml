name: CI / Deploy (skip-able with #skip)

on:
  push:
    branches:
      - add-versioning
  pull_request:
    types:
      - closed

permissions:
  contents: write   # required if you will create tags/push changes

jobs:
  detect-and-deploy:
    runs-on: ubuntu-latest
    # Only run this job for pushes to main or merged PRs
    if: ${{ github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true) }}

    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4

      - name: "Gather commit messages and decide if we should skip"
        id: detect_skip
        uses: actions/github-script@v6
        with:
          script: |
            const context = github.context;
            const eventName = context.eventName;

            // collect commit messages array
            let messages = [];

            if (eventName === 'push') {
              // for push events the commits array is available in payload
              const commits = context.payload.commits || [];
              messages = commits.map(c => c.message || '');
            } else if (eventName === 'pull_request') {
              // for PR events list the commits via the REST API
              const pr = context.payload.pull_request;
              if (!pr) {
                core.setOutput('skip', 'false');
                core.setOutput('messages', '');
                return;
              }
              const commitsResp = await github.rest.pulls.listCommits({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                per_page: 100
              });
              messages = commitsResp.data.map(c => c.commit && c.commit.message ? c.commit.message : '');
            }

            const joined = messages.join('\n');
            // decide skip - search for the literal substring "#skip" (case-sensitive)
            const shouldSkip = joined.toLowerCase().includes('#skip');

            core.setOutput('skip', shouldSkip ? 'true' : 'false');
            core.setOutput('messages', joined.substring(0, 1000));

      - name: "Debug: show detected commit messages (for logs)"
        if: ${{ always() }}
        run: |
          echo "Event: ${{ github.event_name }}"
          echo "Collected messages (truncated): ${{ steps.detect_skip.outputs.messages }}"
          echo "Should skip? ${{ steps.detect_skip.outputs.skip }}"

      - name: "Tag version"
        if: ${{ steps.detect_skip.outputs.skip != 'true' }}
        id: tag
        run: |
          echo "Would create and push tag here."
          # Replace the above with your actual tagging logic:
          # git config user.name "github-actions[bot]"
          # git config user.email "github-actions[bot]@users.noreply.github.com"
          # git tag vX.Y.Z
          # git push origin vX.Y.Z

      - name: "Deploy to production"
        if: ${{ steps.detect_skip.outputs.skip != 'true' }}
        run: |
          echo "Deploying to production..."
          # your deploy commands here
